{"ast":null,"code":"var _jsxFileName = \"E:\\\\FitAI (1)\\\\FitAI\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { CognitoUserPool } from 'amazon-cognito-identity-js';\nimport userPool from '../aws-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const currentUser = userPool.getCurrentUser();\n    if (!currentUser) {\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsLoading(false);\n      return;\n    }\n    currentUser.getSession(async (err, session) => {\n      if (err || !session.isValid()) {\n        setUser(null);\n        setIsAuthenticated(false);\n        setIsLoading(false);\n        return;\n      }\n      currentUser.getUserAttributes(async (err, attributes) => {\n        if (err) {\n          console.error(\"Failed to get user attributes\", err);\n          setUser({\n            email: currentUser.getUsername()\n          });\n          setIsAuthenticated(true);\n          setIsLoading(false);\n          return;\n        }\n        const attrMap = {};\n        attributes.forEach(attr => {\n          attrMap[attr.getName()] = attr.getValue();\n        });\n        const email = attrMap.email;\n        let profilePhotoUrl = null;\n        let firstName = '';\n        let lastName = '';\n        let createdAt = null;\n        try {\n          const response = await fetch(`${API_BASE_URL}/api/user-profile-photo/${email}`);\n          const data = await response.json();\n          profilePhotoUrl = data.photoUrl || null;\n          firstName = data.firstName || '';\n          lastName = data.lastName || '';\n          createdAt = data.createdAt || null;\n        } catch (error) {\n          console.error('❌ Failed to load profile data from backend:', error);\n        }\n\n        // Fallback to Cognito values if backend values are missing\n        if (!firstName) firstName = attrMap.given_name || '';\n        if (!lastName) lastName = attrMap.family_name || '';\n        setUser({\n          email,\n          givenName: firstName,\n          familyName: lastName,\n          name: `${firstName} ${lastName}`.trim(),\n          profilePhotoUrl,\n          createdAt: createdAt || attrMap.updated_at || null\n        });\n        setIsAuthenticated(true);\n        setIsLoading(false);\n      });\n    });\n  }, []);\n  const signOut = () => {\n    const currentUser = userPool.getCurrentUser();\n    if (currentUser) currentUser.signOut();\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isLoading,\n      setUser,\n      setIsAuthenticated,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"v1LRzRO747hYRtRdhUIJv9BiM4M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","CognitoUserPool","userPool","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","currentUser","getCurrentUser","getSession","err","session","isValid","getUserAttributes","attributes","console","error","email","getUsername","attrMap","forEach","attr","getName","getValue","profilePhotoUrl","firstName","lastName","createdAt","response","fetch","data","json","photoUrl","given_name","family_name","givenName","familyName","name","trim","updated_at","signOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/FitAI (1)/FitAI/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { CognitoUserPool } from 'amazon-cognito-identity-js';\nimport userPool from '../aws-config';\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\n\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const currentUser = userPool.getCurrentUser();\n\n    if (!currentUser) {\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsLoading(false);\n      return;\n    }\n\n    currentUser.getSession(async (err, session) => {\n      if (err || !session.isValid()) {\n        setUser(null);\n        setIsAuthenticated(false);\n        setIsLoading(false);\n        return;\n      }\n\n      currentUser.getUserAttributes(async (err, attributes) => {\n        if (err) {\n          console.error(\"Failed to get user attributes\", err);\n          setUser({ email: currentUser.getUsername() });\n          setIsAuthenticated(true);\n          setIsLoading(false);\n          return;\n        }\n\n        const attrMap = {};\n        attributes.forEach(attr => {\n          attrMap[attr.getName()] = attr.getValue();\n        });\n\n        const email = attrMap.email;\n        let profilePhotoUrl = null;\n        let firstName = '';\n        let lastName = '';\n        let createdAt = null;\n\n        try {\n          const response = await fetch(`${API_BASE_URL}/api/user-profile-photo/${email}`);\n          const data = await response.json();\n          profilePhotoUrl = data.photoUrl || null;\n          firstName = data.firstName || '';\n          lastName = data.lastName || '';\n          createdAt = data.createdAt || null;\n        } catch (error) {\n          console.error('❌ Failed to load profile data from backend:', error);\n        }\n\n        // Fallback to Cognito values if backend values are missing\n        if (!firstName) firstName = attrMap.given_name || '';\n        if (!lastName) lastName = attrMap.family_name || '';\n\n        setUser({\n          email,\n          givenName: firstName,\n          familyName: lastName,\n          name: `${firstName} ${lastName}`.trim(),\n          profilePhotoUrl,\n          createdAt: createdAt || attrMap.updated_at || null\n        });\n\n        setIsAuthenticated(true);\n        setIsLoading(false);\n      });\n    });\n  }, []);\n\n  const signOut = () => {\n    const currentUser = userPool.getCurrentUser();\n    if (currentUser) currentUser.signOut();\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        isLoading,\n        setUser,\n        setIsAuthenticated,\n        signOut,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}