{"ast":null,"code":"var _jsxFileName = \"/Users/sureshreddyd/Desktop/FitAI/src/pages/AIChatAssistantDetails.js\",\n  _s = $RefreshSig$();\n// src/pages/AIChatAssistantDetails.js\nimport React, { useState } from 'react';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIChatAssistantDetails = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\n  if (!API_KEY) {\n    console.error('❌ Gemini API Key is missing! Set REACT_APP_GEMINI_API_KEY in your .env file');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Missing Gemini API Key. Please check your .env configuration.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  const genAI = new GoogleGenerativeAI(API_KEY);\n  const model = genAI.getGenerativeModel({\n    model: \"gemini-1.5-flash\"\n  });\n  const sendMessage = async () => {\n    if (!prompt.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: prompt\n    };\n    setChatLog(prev => [...prev, userMessage]);\n    setPrompt('');\n    setLoading(true);\n    try {\n      const chat = model.startChat({\n        history: chatLog.map(msg => ({\n          role: msg.sender === 'user' ? 'user' : 'model',\n          parts: [{\n            text: msg.text\n          }]\n        })),\n        generationConfig: {\n          maxOutputTokens: 500\n        }\n      });\n      const result = await chat.sendMessage(userMessage.text);\n      const response = await result.response;\n      const text = response.text(); // already string\n\n      const botMessage = {\n        sender: 'bot',\n        text: text || 'Sorry, I could not generate a response. Please try again.'\n      };\n      setChatLog(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error communicating with Gemini API:', error);\n      setChatLog(prev => [...prev, {\n        sender: 'bot',\n        text: `❌ Error: ${error.message || 'Failed to get a response.'}`\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && prompt.trim()) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto my-10 p-6 bg-white rounded-lg shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800 mb-6 text-center\",\n      children: \"AI Chat Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-6 text-center\",\n      children: \"Ask anything about fitness, nutrition, or health!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-[60vh] border border-gray-200 rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n        children: [chatLog.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-center mt-20\",\n          children: \"Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), chatLog.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `prose prose-sm max-w-xs px-4 py-2 rounded-lg whitespace-pre-wrap break-words ${msg.sender === 'user' ? 'bg-purple-600 text-white' : 'bg-gray-100 text-gray-900'}`,\n            children: msg.sender === 'bot' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this) : msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-200 text-gray-500 italic px-4 py-2 rounded-lg\",\n            children: \"AI is typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-200 bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: prompt,\n            onChange: e => setPrompt(e.target.value),\n            onKeyDown: handleKeyDown,\n            placeholder: \"Ask me anything...\",\n            className: \"flex-grow border rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500\",\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: loading || !prompt.trim(),\n            className: `px-6 py-2 rounded bg-purple-600 text-white font-semibold ${loading || !prompt.trim() ? 'opacity-50 cursor-not-allowed' : 'hover:bg-purple-700 transition-colors'}`,\n            children: loading ? 'Sending...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChatAssistantDetails, \"k04TIDlQ9zUZdnP2SJK5eMXRX40=\");\n_c = AIChatAssistantDetails;\nexport default AIChatAssistantDetails;\nvar _c;\n$RefreshReg$(_c, \"AIChatAssistantDetails\");","map":{"version":3,"names":["React","useState","GoogleGenerativeAI","ReactMarkdown","jsxDEV","_jsxDEV","AIChatAssistantDetails","_s","prompt","setPrompt","chatLog","setChatLog","loading","setLoading","API_KEY","process","env","REACT_APP_GEMINI_API_KEY","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","genAI","model","getGenerativeModel","sendMessage","trim","userMessage","sender","text","prev","chat","startChat","history","map","msg","role","parts","generationConfig","maxOutputTokens","result","response","botMessage","message","handleKeyDown","e","key","preventDefault","className","length","idx","type","value","onChange","target","onKeyDown","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/sureshreddyd/Desktop/FitAI/src/pages/AIChatAssistantDetails.js"],"sourcesContent":["// src/pages/AIChatAssistantDetails.js\nimport React, { useState } from 'react';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport ReactMarkdown from 'react-markdown';\n\nconst AIChatAssistantDetails = () => {\n  const [prompt, setPrompt] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\n\n  if (!API_KEY) {\n    console.error('❌ Gemini API Key is missing! Set REACT_APP_GEMINI_API_KEY in your .env file');\n    return <div>Missing Gemini API Key. Please check your .env configuration.</div>;\n  }\n\n  const genAI = new GoogleGenerativeAI(API_KEY);\n  const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\n\n  const sendMessage = async () => {\n    if (!prompt.trim()) return;\n\n    const userMessage = { sender: 'user', text: prompt };\n    setChatLog((prev) => [...prev, userMessage]);\n    setPrompt('');\n    setLoading(true);\n\n    try {\n      const chat = model.startChat({\n        history: chatLog.map((msg) => ({\n          role: msg.sender === 'user' ? 'user' : 'model',\n          parts: [{ text: msg.text }],\n        })),\n        generationConfig: { maxOutputTokens: 500 },\n      });\n\n      const result = await chat.sendMessage(userMessage.text);\n      const response = await result.response;\n      const text = response.text(); // already string\n\n      const botMessage = {\n        sender: 'bot',\n        text: text || 'Sorry, I could not generate a response. Please try again.',\n      };\n\n      setChatLog((prev) => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error communicating with Gemini API:', error);\n      setChatLog((prev) => [\n        ...prev,\n        { sender: 'bot', text: `❌ Error: ${error.message || 'Failed to get a response.'}` },\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && prompt.trim()) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto my-10 p-6 bg-white rounded-lg shadow-xl\">\n      <h1 className=\"text-3xl font-bold text-gray-800 mb-6 text-center\">AI Chat Assistant</h1>\n      <p className=\"text-gray-600 mb-6 text-center\">\n        Ask anything about fitness, nutrition, or health!\n      </p>\n\n      <div className=\"flex flex-col h-[60vh] border border-gray-200 rounded-lg overflow-hidden\">\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n          {chatLog.length === 0 && (\n            <p className=\"text-gray-500 text-center mt-20\">Start the conversation!</p>\n          )}\n          {chatLog.map((msg, idx) => (\n            <div\n              key={idx}\n              className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n            >\n              <div\n                className={`prose prose-sm max-w-xs px-4 py-2 rounded-lg whitespace-pre-wrap break-words ${\n                  msg.sender === 'user'\n                    ? 'bg-purple-600 text-white'\n                    : 'bg-gray-100 text-gray-900'\n                }`}\n              >\n                {msg.sender === 'bot' ? (\n                  <ReactMarkdown>{msg.text}</ReactMarkdown>\n                ) : (\n                  msg.text\n                )}\n              </div>\n            </div>\n          ))}\n          {loading && (\n            <div className=\"flex justify-start\">\n              <div className=\"bg-gray-200 text-gray-500 italic px-4 py-2 rounded-lg\">\n                AI is typing...\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n          <div className=\"flex gap-2\">\n            <input\n              type=\"text\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Ask me anything...\"\n              className=\"flex-grow border rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              disabled={loading}\n            />\n            <button\n              onClick={sendMessage}\n              disabled={loading || !prompt.trim()}\n              className={`px-6 py-2 rounded bg-purple-600 text-white font-semibold ${\n                loading || !prompt.trim()\n                  ? 'opacity-50 cursor-not-allowed'\n                  : 'hover:bg-purple-700 transition-colors'\n              }`}\n            >\n              {loading ? 'Sending...' : 'Send'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AIChatAssistantDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}